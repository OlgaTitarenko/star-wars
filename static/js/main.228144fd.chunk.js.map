{"version":3,"sources":["HomePage/index.js","HomePage/HomePage.js","api/_helper.js","api/films.js","FilmsPage/FilmsPage.js","FilmsPage/index.js","api/people.js","Common/Pagination/index.js","Common/Pagination/Pagination.js","PeoplePage/PeoplePage.js","PeoplePage/index.js","PeoplePage/PersonPage.js","FilmsPage/FilmPage.js","App.js","index.js"],"names":["HomePage","react_default","a","createElement","className","get","url","arguments","length","undefined","fetch","then","response","json","getAll","_ref","_ref$page","page","_ref$search","search","urlParams","URLSearchParams","set","concat","toString","getById","filmId","FilmsPage","state","isLoaded","filmsId","films","loadFilms","_callee","_ref2","regenerator_default","wrap","_context","prev","next","_this","filmsApi","sent","results","setState","stop","this","updatePageFromURL","props","location","pathname","_this$state","Fragment","map","film","FilmsPage_FilmTable","key","React","Component","FilmTable","_ref3","Link","to","replace","title","episode_id","director","producer","personId","Pagination","withRouter","count","_ref$perPage","perPage","pagesCount","Math","ceil","pages","i","push","getSearchWithPage","PeoplePage","people","loadPeople","peopleApi","Common_Pagination","person","PeoplePage_PersonTable","name","PersonTable","mass","height","hair_color","skin_color","PersonPage","loadPerson","Object","keys","item","FilmPage","loadFilm","App","NavLink","Switch","Route","exact","path","component","render","ReactDOM","BrowserRouter","basename","process","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.228144fd.chunk.js","sourcesContent":["import HomePage from './HomePage';\nexport default HomePage;\n","import React from 'react';\n\nconst HomePage = () => (\n  <div className=\"HomePage\">\n    <h1>Home page</h1>\n  </div>\n);\n\nexport default HomePage;\n","const BASE_API_URL = 'https://swapi.co/api';\n\nexport const get = (url, params = {}) => {\n  return fetch(BASE_API_URL + url)\n    .then(response => response.json())\n};\n","import { get } from './_helper';\r\n\r\nexport const getAll = ({ page = 1, search = '' }) => {\r\n    const urlParams = new URLSearchParams();\r\n\r\n    urlParams.set('page', page);\r\n    urlParams.set('search', search);\r\n\r\n    return get(`/films?${urlParams.toString()}`);\r\n};\r\n\r\nexport const getById = (filmId) => {\r\n    return get(`${filmId}`);\r\n};\r\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport * as filmsApi from '../api/films';\n\nclass FilmsPage extends React.Component{\n    state = {\n        isLoaded: false,\n        filmsId:'',\n        films: []\n    };\n\n    componentDidMount() {\n        this.updatePageFromURL();\n    }\n\n    updatePageFromURL() {\n        const { location } = this.props;\n        const filmsId = location.pathname;\n        this.setState({ filmsId }, this.loadFilms);\n    }\n\n    loadFilms = async () => {\n        const { filmsId } = this.state;\n        const { results : films} = await filmsApi.getAll({ filmsId });\n        this.setState({\n            films,\n            isLoaded: true,\n        });\n    };\n\n    render() {\n        const { films, isLoaded } = this.state;\n\n        return (\n            <div className=\"FilmsPage\">\n                <h1>Films page</h1>\n                { isLoaded ? (\n                    <>\n                        <table>\n                            <thead>\n                            <tr>\n                                <td>Title</td>\n                                <td>Episode id</td>\n                                <td>Director</td>\n                                <td>Producer</td>\n                            </tr>\n                            </thead>\n                            <tbody>\n                            { films.map(film=>{\n                               return <FilmTable film={film} key={film.url} />\n                            })\n                            }\n                            </tbody>\n                        </table>\n\n                    </>\n                ) : (\n                    <p>Loading...</p>\n                )}\n            </div>\n        );\n    }\n}\nconst FilmTable = ({film}) => {\n    return  (\n        <tr>\n            <td><Link to={film.url.replace('https://swapi.co/api','')}>{film.title}</Link></td>\n            <td>{film.episode_id}</td>\n            <td>{film.director}</td>\n            <td>{film.producer}</td>\n        </tr>\n    )\n}\n\nexport default FilmsPage;\n","import FilmsPage from './FilmsPage';\nexport default FilmsPage;\n","import { get } from './_helper';\n\nexport const getAll = ({ page = 1, search = '' }) => {\n  const urlParams = new URLSearchParams();\n\n  urlParams.set('page', page);\n  urlParams.set('search', search);\n\n  return get(`/people?${urlParams.toString()}`);\n};\n\nexport const getById = (personId) => {\n  return get(`${personId}`);\n};\n","import Pagination from './Pagination';\nexport default Pagination;\n","import React from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nconst Pagination = ({ location, count, page = 1, perPage = 10 }) => {\n\n  const pagesCount = Math.ceil(count / perPage);\n  const pages = [];\n\n  for (let i = 0; i < pagesCount; i++) {\n    pages.push(i + 1);\n  }\n\n  const getSearchWithPage = (page) => {\n    const urlParams = new URLSearchParams(location.search);\n\n    urlParams.set('page', page);\n\n    return urlParams.toString();\n  };\n\n  return (\n    <div className=\"Pagination\">\n      {pages.map(page => (\n        <Link\n          key={page}\n          to={{\n            pathname: location.pathname,\n            search: getSearchWithPage(page),\n          }}\n        >\n          {page}\n        </Link>\n      ))}\n    </div>\n  );\n};\n\nPagination.propTypes = {\n  count: PropTypes.number.isRequired,\n  page: PropTypes.number,\n  perPage: PropTypes.number,\n};\n\nexport default withRouter(Pagination);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport * as peopleApi from '../api/people';\nimport Pagination from '../Common/Pagination'\n\nclass PeoplePage extends React.Component {\n\n  state = {\n    isLoaded: false,\n    page: 0,\n    count: 0,\n    people: []\n  };\n\n  componentDidMount() {\n    this.updatePageFromURL();\n  }\n\n  componentDidUpdate() {\n    this.updatePageFromURL();\n  }\n\n  updatePageFromURL() {\n    const { location } = this.props;\n    const urlParams = new URLSearchParams(location.search);\n    const page = +urlParams.get('page') || 1;\n\n    if (page === this.state.page) {\n      return;\n    }\n\n    this.setState({ page }, this.loadPeople);\n  }\n\n  loadPeople = async () => {\n    const { page } = this.state;\n    const { count, results: people } = await peopleApi.getAll({ page });\n    this.setState({\n      people,\n      count,\n      isLoaded: true,\n    });\n  };\n\n  render() {\n    const { people, isLoaded, count, page } = this.state;\n\n    return (\n      <div className=\"PeoplePage\">\n        <h1>People page</h1>\n\n        { isLoaded ? (\n          <>\n            <Pagination count={count} page={page} />\n            <table>\n              <thead>\n                <tr>\n                  <td>Name</td>\n                  <td>Mass</td>\n                  <td>Height</td>\n                  <td>Hair color</td>\n                  <td>Skin color</td>\n                </tr>\n              </thead>\n              <tbody>\n              { people.map ( person => (\n                  <PersonTable person={person} key={person.name} />\n              ))\n              }\n              </tbody>\n            </table>\n\n          </>\n        ) : (\n          <p>Loading...</p>\n        )}\n\n      </div>\n    );\n  }\n}\n\nconst PersonTable = ({person}) => {\n  return  (\n      <tr>\n        <td><Link to={person.url.replace('https://swapi.co/api','')}>{person.name}</Link></td>\n        <td>{person.mass}</td>\n        <td>{person.height}</td>\n        <td>{person.hair_color}</td>\n        <td>{person.skin_color}</td>\n      </tr>\n     )\n}\n\nexport default PeoplePage;\n","import PeoplePage from './PeoplePage';\nexport default PeoplePage;\n","import React from 'react'\r\nimport * as peopleApi from \"../api/people\";\r\n\r\nclass PersonPage extends React.Component {\r\n    state = {\r\n        isLoaded: false,\r\n        personId:'',\r\n        person: []\r\n    };\r\n    componentDidMount() {\r\n        const { location } = this.props;\r\n        const personId = location.pathname;\r\n        this.setState({personId}, this.loadPerson);\r\n    };\r\n\r\n    loadPerson = async () => {\r\n        const person = await peopleApi.getById(this.state.personId);\r\n\r\n        this.setState({\r\n            isLoaded: true,\r\n            person\r\n        });\r\n\r\n    };\r\n\r\n    render() {\r\n        const { isLoaded , person} = this.state;\r\n\r\n        return (\r\n            <div>\r\n                PersonPage\r\n                {\r\n                    isLoaded ?\r\n                       ( <div>\r\n                           <br />\r\n                           <ul>\r\n                              { Object.keys(person).map(item => {\r\n                                  return <li key={ item }>\r\n                                            <span>{item.replace('_',' ')} - </span>\r\n                                            <br />\r\n                                            {(typeof person[item])===\"string\" ? person[item]\r\n                                                : person[item].length\r\n                                            }\r\n                                         </li>\r\n                              })}\r\n\r\n                           </ul>\r\n\r\n                       </div>)\r\n                        :( <div>Loading</div>)\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default PersonPage;","import React from 'react'\r\nimport * as filmsApi from \"../api/films\";\r\n\r\nclass FilmPage extends React.Component {\r\n    state = {\r\n        isLoaded: false,\r\n        filmId:'',\r\n        film: []\r\n    };\r\n    componentDidMount() {\r\n        const { location } = this.props;\r\n        const filmId = location.pathname;\r\n        this.setState({filmId}, this.loadFilm);\r\n    };\r\n\r\n    loadFilm = async () => {\r\n        const film = await filmsApi.getById(this.state.filmId);\r\n\r\n        this.setState({\r\n            isLoaded: true,\r\n            film\r\n        });\r\n\r\n    };\r\n\r\n    render() {\r\n        const { isLoaded , film} = this.state;\r\n\r\n        return (\r\n            <div>\r\n                Film Page\r\n                {\r\n                    isLoaded ?\r\n                        ( <div>\r\n                            <br />\r\n                            <ul>\r\n                                { Object.keys(film).map(item => {\r\n                                    return <li key={ item }>\r\n                                        <span>{item.replace('_',' ')} - </span>\r\n                                        <br />\r\n                                        {((typeof film[item])===\"string\" || (typeof film[item])===\"number\") ? film[item]\r\n                                            : film[item].length\r\n                                        }\r\n                                    </li>\r\n                                })}\r\n                            </ul>\r\n                        </div>)\r\n                        :( <div>Loading</div>)\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default FilmPage;","import React, { Component } from 'react';\nimport { NavLink, Route, Switch } from 'react-router-dom';\n\nimport HomePage from './HomePage';\nimport FilmsPage from './FilmsPage';\nimport PeoplePage from './PeoplePage';\nimport PersonPage from './PeoplePage/PersonPage';\nimport FilmPage from './FilmsPage/FilmPage'\n\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>Star Wars</h1>\n        <div className=\"navLinks\">\n          <NavLink to=\"/\" >Home</NavLink> <br />\n          <NavLink to=\"/films\">Films</NavLink> <br />\n          <NavLink to=\"/people\">People</NavLink> <br />\n        </div>\n        <section>\n          <Switch>\n            <Route exact path={'/'} component={HomePage} />\n            <Route path={'/films/:id'} component={FilmPage} />\n            <Route path={'/films'} component={FilmsPage} />\n            <Route path={'/people/:id'} component={PersonPage} />\n            <Route path={'/people'} component={PeoplePage} />\n\n            <Route render={() => <h1>Page not found</h1>}/>\n          </Switch>\n        </section>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <BrowserRouter basename={process.env.PUBLIC_URL}>\n    <App />\n  </BrowserRouter>,\n\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}